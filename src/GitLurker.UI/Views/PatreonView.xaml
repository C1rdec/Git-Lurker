<mah:MetroWindow x:Class="GitLurker.UI.Views.PatreonView"
                 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                 xmlns:cal="http://www.caliburnproject.org"
                 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                 xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                 xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
                 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                 Title="BECOME A Patreon"
                 Width="800"
                 Height="450"
                 MinWidth="650"
                 MinHeight="400"
                 WindowStartupLocation="CenterScreen"
                 mc:Ignorable="d">
    <mah:MetroWindow.Resources>
        <ResourceDictionary>
            <Style x:Key="LabelHeaderStyle"
                   BasedOn="{StaticResource {x:Type Label}}"
                   TargetType="{x:Type Label}">
                <Setter Property="FontSize" Value="32" />
                <Setter Property="FontWeight" Value="SemiBold" />
                <Setter Property="HorizontalAlignment" Value="Center" />
            </Style>
            <Style x:Key="TextBoxStyle"
                   BasedOn="{StaticResource {x:Type TextBox}}"
                   TargetType="{x:Type TextBox}">
                <Setter Property="BorderThickness" Value="0,0,0,1" />
            </Style>
        </ResourceDictionary>
    </mah:MetroWindow.Resources>
    <mah:MetroWindow.Flyouts>
        <mah:FlyoutsControl Focusable="False" KeyboardNavigation.TabNavigation="None">
            <mah:Flyout x:Name="MyFlyout"
                        Width="{Binding ActualWidth, ElementName=FlyoutWidth}"
                        Focusable="False"
                        Header="{Binding FlyoutHeader}"
                        IsOpen="{Binding FlyoutOpen}"
                        KeyboardNavigation.TabNavigation="None"
                        Position="Right">
                <ContentControl MaxWidth="650"
                                VerticalAlignment="Center"
                                cal:View.Model="{Binding Path=FlyoutContent, Mode=OneWay}" />
            </mah:Flyout>
        </mah:FlyoutsControl>
    </mah:MetroWindow.Flyouts>
    <Grid x:Name="FlyoutWidth" Margin="0">
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="3*" />
        </Grid.RowDefinitions>
        <Grid Margin="60,20,60,20">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="auto" />
            </Grid.ColumnDefinitions>
            <Button x:Name="Login"
                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    Cursor="Hand">
                <Button.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.Button.Circle}" TargetType="Button">
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="False">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsLoggedIn}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                                <Setter Property="IsHitTestVisible" Value="False" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <Button.Content>LOGIN</Button.Content>
            </Button>

            <Border Grid.Column="1"
                    VerticalAlignment="Center"
                    BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                    BorderThickness="2"
                    Visibility="{Binding IsLoggedIn, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button x:Name="Pledge"
                    Grid.Column="2"
                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    Cursor="Hand">
                <Button.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.Button.Circle}" TargetType="Button">
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding NeedJoin}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="IsEnabled" Value="True" />
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsPledged}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="IsHitTestVisible" Value="False" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <TextBlock>JOIN</TextBlock>
            </Button>
            <Border Grid.Column="3"
                    VerticalAlignment="Center"
                    BorderBrush="{DynamicResource MahApps.Brushes.Accent}"
                    BorderThickness="2"
                    Visibility="{Binding IsPledged, Converter={StaticResource BooleanToVisibilityConverter}}" />

            <Button Grid.Column="4"
                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                    Cursor="Hand"
                    IsHitTestVisible="False">
                <Button.Style>
                    <Style BasedOn="{StaticResource MahApps.Styles.Button.Circle}" TargetType="Button">
                        <Setter Property="BorderBrush" Value="Gray" />
                        <Setter Property="IsEnabled" Value="False" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsPledged}" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource MahApps.Brushes.Accent}" />
                                <Setter Property="IsHitTestVisible" Value="False" />
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent3}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                <iconPacks:BootstrapIcons Width="25"
                                          Height="25"
                                          Kind="Unlock" />
            </Button>
        </Grid>
        <ContentControl x:Name="Settings" Grid.Row="1" />
    </Grid>
</mah:MetroWindow>
