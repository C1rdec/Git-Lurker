<UserControl x:Class="GitLurker.UI.Views.ActionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DesignHeight="80"
             d:DesignWidth="80"
             mc:Ignorable="d">
    <Border Grid.Column="1"
            Width="50"
            Height="50"
            cal:Message.Attach="[Event MouseUp] = [Action OnMouseUp()]; [Event MouseDown] = [Action OnMouseDown()]; [Event MouseLeave] = [Action OnMouseLeave()]"
            CornerRadius="6"
            IsEnabled="{Binding IsEnable}">
        <Border.Style>
            <Style TargetType="Border">
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Opacity="0.0003" Color="White" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Opacity" Value="0.6" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding IsDisable}" Value="true">
                        <Setter Property="Opacity" Value="0.2" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding IsActive}" Value="true">
                        <Setter Property="BorderThickness" Value="1.5" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.Secondary}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        <Setter Property="Opacity" Value="1" />
                    </DataTrigger>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="BorderThickness" Value="1.5" />
                        <Setter Property="BorderBrush" Value="{DynamicResource Brushes.Secondary}" />
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
                        <Setter Property="Opacity" Value="1" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Grid>
            <ProgressBar Background="Transparent"
                         BorderThickness="0"
                         Maximum="100"
                         Minimum="0"
                         Orientation="Vertical"
                         Value="{Binding HoldProgress}">
                <ProgressBar.Style>
                    <Style TargetType="ProgressBar">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ProgressBar">
                                    <Grid x:Name="Root">
                                        <Border Name="PART_Track"
                                                Background="Transparent"
                                                BorderThickness="0"
                                                CornerRadius="2" />
                                        <Border Name="PART_Indicator"
                                                HorizontalAlignment="Left"
                                                Background="{DynamicResource Brushes.Secondary}"
                                                BorderThickness="0"
                                                CornerRadius="2" />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <!--  Getting vertical style working using technique described here: http://stackoverflow.com/a/6849237/7532  -->
                                        <Trigger Property="Orientation" Value="Vertical">
                                            <Setter TargetName="Root" Property="LayoutTransform">
                                                <Setter.Value>
                                                    <RotateTransform Angle="270" />
                                                </Setter.Value>
                                            </Setter>

                                            <Setter TargetName="Root" Property="Width" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Height}" />
                                            <Setter TargetName="Root" Property="Height" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Width}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>

                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ProgressBar.Style>
            </ProgressBar>
            <ContentControl HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Content="{Binding Icon}"
                            Opacity="0.4" />
        </Grid>
    </Border>
</UserControl>
